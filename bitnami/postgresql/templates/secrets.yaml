{{- if (include "postgresql.createSecret" .) }}
{{- $requiredPasswords := list "postgresqlPassword" -}}
{{- $secretName :=  include "postgresql.fullname" . -}}

{{- $getpostgresqlPassword := include "common.notetxt.secret.getvalue" (dict "varname" "POSTGRESQL_PASSWORD" "secret" $secretName "field" "postgresql-password" "context" . ) -}}
{{- $getPasswords := list $getpostgresqlPassword -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
  {{- include "common.labels.standard" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "postgresql.tplValue" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if and .Values.postgresqlPostgresPassword (not (eq .Values.postgresqlUsername "postgres")) }}
    {{- $requiredPassword = append $requiredPassword "postgresqlPostgresPassword" -}}
    {{- $getPostgresqlPostgresPassword := include "common.notetxt.secret.getvalue" (dict "varname" "POSTGRESQL_POSTGRES_PASSWORD" "secret" $secretName "field" "postgresql-postgres-password" "context" . ) -}}
    {{- $getPasswords = append $getPasswords $getPostgresqlPostgresPassword -}}
  postgresql-postgres-password: {{ include "postgresql.postgres.password" . | b64enc | quote }}
  {{- end }}
  postgresql-password: {{ include "postgresql.password" . | b64enc | quote }}
  {{- if .Values.replication.enabled }}
    {{- $requiredPassword = append $requiredPassword "replication.password" -}}
    {{- $getReplicationPassword := include "common.notetxt.secret.getvalue" (dict "varname" "REPLICATION_PASSWORD" "secret" $secretName "field" "postgresql-replication-password" "context" . ) -}}
    {{- $getPasswords = append $getPasswords $getReplicationPassword -}}
  postgresql-replication-password: {{ include "postgresql.replication.password" . | b64enc | quote }}
  {{- end }}
  {{- if (and .Values.ldap.enabled .Values.ldap.bind_password)}}
  postgresql-ldap-password: {{ .Values.ldap.bind_password | b64enc | quote }}
  {{- end }}

{{- $getPasswordsString := $getPasswords | join "\n" -}}
{{- include "common.errors.password.empty" (dict "required" $requiredPasswords "passwords" $getPasswordsString "context" $) -}}

{{- end -}}
